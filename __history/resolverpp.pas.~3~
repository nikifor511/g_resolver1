unit resolverpp;

interface

uses problem, System.Generics.Collections, IdHTTP, global_variables;

type
  TReoselverPP = class
    public
      class var problems: TList<TProblem>;
      class var FIO: String;
      class function ask_login(fio, pass: String): integer;
      class function get_list_problems: integer;
      class function ask_create_problem(title, describe: string; status: integer):integer;
      class function get_id_problem_by_title(title: String): integer;
      class function get_name_by_id(id: integer): String;

    private
      myIdHTTP: TIdHTTP;

  end;

implementation

class function ask_login(fio, pass: String): integer;
var resultHTTPGet: String;
begin
  myIdHTTP := TIdHTTP.Create();
  resultHTTPGet := myIdHTTP.Get(TGlobalVariables.server_host + '?oper=__log&name=' + fio + '&pass=' + pass);
  if resultHTTPGet = '0' then begin
    self.IsLogin := true;
    self.FIO := fio;
  end;
  Result := StrToInt(resultHTTPGet);
end;


end.
